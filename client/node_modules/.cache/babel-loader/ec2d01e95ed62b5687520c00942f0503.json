{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taewon/Documents/nodejs/management/client/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport Customer from './components/Customer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CustomerAdd from './components/CustomerAdd';\n\nconst styles = theme => ({\n  root: {\n    // root 는 전체 설정 \n    width: '100%',\n    //marginTop : theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    // 테이블이 전체에서 최소 1090 가진다\n    minwidth: 1080\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.stateRefresh = () => {\n      this.setState({\n        customers: '',\n        completed: 0\n      });\n      this.callApi().then(res => {\n        this.setState({\n          customers: res\n        }).catch(err => console.log(err));\n      });\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/customers');\n      const body = await response.json();\n      return body;\n    };\n\n    this.progress = () => {\n      const {\n        completed\n      } = this.state;\n      this.setState({\n        completed: completed >= 100 ? 0 : completed + 1\n      });\n    };\n\n    this.state = {\n      customers: '',\n      completed: 0\n    };\n  }\n\n  // compodidmount 모든 컴포먼트가 마운트가 되었을 때 사용되는 부분\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20);\n    this.callApi().then(res => this.setState({\n      customers: res\n    })).catch(err => console.log(err));\n  }\n\n  //기본적으로 변경되지 않는 정보는 props 로 변경되는 정보는 state를 사용\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\uBC88\\uD638\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\uC774\\uBBF8\\uC9C0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\uC774\\uB984\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\uC0DD\\uB144\\uC6D4\\uC77C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\uC131\\uBCC4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\\uC9C1\\uC5C5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: this.state.customers ? this.state.customers.map(c => {\n              return /*#__PURE__*/_jsxDEV(Customer //map 함수 사용시 반드시 key 값을 지정해주어야한다.\n              , {\n                id: c.id,\n                image: c.image,\n                name: c.name,\n                birthday: c.birthday,\n                gender: c.gender,\n                job: c.job\n              }, c.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: \"6\",\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  className: classes.progress,\n                  variant: \"determinate\",\n                  value: this.state.completed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomerAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/taewon/Documents/nodejs/management/client/src/App.js"],"names":["Component","Customer","Table","TableHead","TableBody","TableRow","TableCell","withStyles","Paper","CircularProgress","CustomerAdd","styles","theme","root","width","overflowX","table","minwidth","progress","margin","spacing","unit","App","constructor","props","stateRefresh","setState","customers","completed","callApi","then","res","catch","err","console","log","response","fetch","body","json","state","componentDidMount","timer","setInterval","render","classes","map","c","id","image","name","birthday","gender","job"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport Customer from './components/Customer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles} from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport CustomerAdd from './components/CustomerAdd'\n\nconst styles = theme => ({\n  root : { // root 는 전체 설정 \n    width : '100%',\n    //marginTop : theme.spacing.unit * 3,\n    overflowX : \"auto\"\n  },\n  table : { // 테이블이 전체에서 최소 1090 가진다\n    minwidth : 1080\n  },\n  progress : {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: '',\n      completed : 0\n\n    }\n  }\n\n  stateRefresh = () => {\n    this.setState({\n      customers : '',\n      completed : 0\n    })\n    this.callApi()\n      .then(res => {this.setState({customers: res})\n      .catch(err => console.log(err))\n    })\n  }\n  // compodidmount 모든 컴포먼트가 마운트가 되었을 때 사용되는 부분\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20);\n    \n      this.callApi()\n      .then(res => this.setState({customers:res}))\n      .catch(err => console.log(err));\n\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body;\n  }\n  \n  progress = () => {\n    const {completed} = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1});\n  }\n\n  //기본적으로 변경되지 않는 정보는 props 로 변경되는 정보는 state를 사용\n  render(){\n    const {classes} = this.props ;\n    return (\n      <div>\n        <Paper className={classes.root}>\n          <Table className = {classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>번호</TableCell>\n                <TableCell>이미지</TableCell>\n                <TableCell>이름</TableCell>\n                <TableCell>생년월일</TableCell>\n                <TableCell>성별</TableCell>\n                <TableCell>직업</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                this.state.customers ? this.state.customers.map(c => {\n                  return (\n                    \n                    <Customer \n                    //map 함수 사용시 반드시 key 값을 지정해주어야한다.\n                      key = {c.id}\n                      id = {c.id}\n                      image = {c.image}\n                      name = {c.name}\n                      birthday = {c.birthday}\n                      gender = {c.gender}\n                      job = {c.job}\n                    />\n                  )\n                }) : \n                <TableRow>\n                  <TableCell colSpan= \"6\" align= \"center\">\n                    <CircularProgress className= {classes.progress} variant=\"determinate\" value={this.state.completed} />\n                  </TableCell>\n                </TableRow>\n              }\n            </TableBody>\n          </Table>\n        </Paper>\n        <CustomerAdd/>\n      </div>\n    );\n  }\n}\n\n\n\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}