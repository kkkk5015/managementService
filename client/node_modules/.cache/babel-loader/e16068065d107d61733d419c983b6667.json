{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/taewon/Documents/nodejs/management/client/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport Customer from './components/Customer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  root: {\n    // root 는 전체 설정 \n    width: '100%',\n    //marginTop : theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    // 테이블이 전체에서 최소 1090 가진다\n    minwidth: 1080\n  }\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      customers: \"\"\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/customers');\n      const body = await response.json();\n      return body;\n    };\n  }\n\n  // compodidmount 모든 컴포먼트가 마운트가 되었을 때 사용되는 부분\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      customers: res\n    })).catch(err => console.log(err));\n  }\n\n  //기본적으로 변경되지 않는 정보는 props 로 변경되는 정보는 state를 사용\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\uC774\\uBBF8\\uC9C0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\uC774\\uB984\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\uC0DD\\uB144\\uC6D4\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\uC131\\uBCC4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\uC9C1\\uC5C5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: this.state.customers ? this.state.customers.map(c => {\n            return /*#__PURE__*/_jsxDEV(Customer //map 함수 사용시 반드시 key 값을 지정해주어야한다.\n            , {\n              id: c.id,\n              image: c.image,\n              name: c.name,\n              birthday: c.birthday,\n              gender: c.gender,\n              job: c.job\n            }, c.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this);\n          }) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/taewon/Documents/nodejs/management/client/src/App.js"],"names":["Component","Customer","Table","TableHead","TableBody","TableRow","TableCell","withStyles","Paper","styles","theme","root","width","overflowX","table","minwidth","App","state","customers","callApi","response","fetch","body","json","componentDidMount","then","res","setState","catch","err","console","log","render","classes","props","map","c","id","image","name","birthday","gender","job"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport Customer from './components/Customer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles} from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\nconst styles = theme => ({\n  root : { // root 는 전체 설정 \n    width : '100%',\n    //marginTop : theme.spacing.unit * 3,\n    overflowX : \"auto\"\n  },\n  table : { // 테이블이 전체에서 최소 1090 가진다\n    minwidth : 1080\n  }\n})\n\nclass App extends Component {\n  state = {\n    customers: \"\"\n  }\n  // compodidmount 모든 컴포먼트가 마운트가 되었을 때 사용되는 부분\n  componentDidMount() {\n      this.callApi()\n      .then(res => this.setState({customers:res}))\n      .catch(err => console.log(err));\n\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body;\n  }\n  //기본적으로 변경되지 않는 정보는 props 로 변경되는 정보는 state를 사용\n  render(){\n    const {classes} = this.props ;\n    return (\n      <Paper className={classes.root}>\n        <Table className = {classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>번호</TableCell>\n              <TableCell>이미지</TableCell>\n              <TableCell>이름</TableCell>\n              <TableCell>생년월일</TableCell>\n              <TableCell>성별</TableCell>\n              <TableCell>직업</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              this.state.customers ? this.state.customers.map(c => {\n                return (\n                  \n                  <Customer \n                  //map 함수 사용시 반드시 key 값을 지정해주어야한다.\n                    key = {c.id}\n                    id = {c.id}\n                    image = {c.image}\n                    name = {c.name}\n                    birthday = {c.birthday}\n                    gender = {c.gender}\n                    job = {c.job}\n                  />\n                )\n              }) : \"\"\n            }\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\n\n\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}